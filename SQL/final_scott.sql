
SELECT *
FROM CP_REASON;

INSERT INTO CP_REASON(ID, CONTENTS) VALUES ('CR001', '불법행위를 조장하는 콘텐츠');
INSERT INTO CP_REASON(ID, CONTENTS) VALUES ('CR002', '스팸홍보/도배 콘텐츠');
INSERT INTO CP_REASON(ID, CONTENTS) VALUES ('CR003', '음란물 콘텐츠');
INSERT INTO CP_REASON(ID, CONTENTS) VALUES ('CR004', '청소년에게 유해한 콘텐츠');
INSERT INTO CP_REASON(ID, CONTENTS) VALUES ('CR005', '인신공격/생명경시/혐오/차별 행위 콘텐츠');
COMMIT;

SELECT *
FROM CP_TREATMENT;

INSERT INTO CP_TREATMENT(ID, CONTENTS) VALUES ('CT001','기간제한(7일)');
INSERT INTO CP_TREATMENT(ID, CONTENTS) VALUES ('CT002','영구제한');

COMMIT;



SELECT *
FROM FV_DISTINCTION;

INSERT INTO FV_DISTINCTION(ID, DISTINCTION_TYPE) VALUES('DT001','그룹');
INSERT INTO FV_DISTINCTION(ID, DISTINCTION_TYPE) VALUES('DT002','모먼트');
INSERT INTO FV_DISTINCTION(ID, DISTINCTION_TYPE) VALUES('DT003','갤러리');

COMMIT;


CREATE OR REPLACE VIEW FAVORITESLISTVIEW
AS
SELECT F.ID AS ID
     , F.USER_ID AS USERID
     , D.DISTINCTION_TYPE AS DISTINCTION_TYPE
     , F.ROOT AS ROOT
FROM FAVORITES F JOIN FV_DISTINCTION D
     ON F.DISTINCTION = D.DISTINCTION_TYPE;


CREATE OR REPLACE VIEW FV_GALLERYLISTVIEW
AS
SELECT FG.ID
     , F.USERID
     , F.DISTINCTION_TYPE
     , F.ROOT
     , FG.GALLERY_ID
     -- G 갤러리에 대한 조회해야하는 정보 추가
FROM FAVORITESLISTVIEW F JOIN FV_GALLERY FG 
     ON F.ID = FG.FAVORITES_ID
     JOIN GALLERY G
     ON FG.GALLERY_ID = G.ID;

CREATE OR REPLACE VIEW FV_GROUPLISTVIEW
AS
SELECT FG.ID
     , F.USERID
     , F.DISTINCTION_TYPE
     , F.ROOT
     , G.ID AS GROUP_ID
     -- G 갤러리에 대한 조회해야하는 내용 추가
FROM FV_GROUP FG JOIN FAVORITESLISTVIEW F
     ON FG.FAVORITES_ID = F.ID
     JOIN TBL_GROUP G
     ON FG.GROUP_ID = G.ID;

CREATE OR REPLACE VIEW FV_MOMENTLISTVIEW
AS
SELECT FM.ID
     , F.USERID
     , F.DISTINCTION_TYPE
     , F.ROOT
     , M.ID AS MOMENT_ID
     --M 모먼트에 대한 조회해야하는 내용 추가
FROM FV_MOMENT FM JOIN FAVORITESLISTVIEW F
     ON FM.FAVORITES_ID = F.ID
     JOIN MOMENT M
     ON FM.MOMENT_ID = M.ID;
     
     
CREATE OR REPLACE VIEW COMPLAINTLISTVIEW
AS
SELECT C.ID
     , C.COMPLAINTER_USER_ID
     , C.COMPLAINTEE_USER_ID
     , CR.CONTENTS AS REASON
     , C.CONTENTS  AS COMPLAINT_CONTENTS
     , C.COMPLAINT_DATE
     , CT.CONTENTS AS TREATMENT
     , C.TREATMENT_REASON
     , C.COMPLETION_DATE
FROM COMPLAINT C JOIN CP_REASON CR
     ON C.REASON_ID = CR.ID
     JOIN CP_TREATMENT CT
     ON C.TREATMENT_ID = CT.ID;
     

CREATE OR REPLACE VIEW CP_GROUPLISTVIEW
AS
SELECT CG.ID
     , C.ID AS COMPLAINT_ID
     , C.COMPLAINTER_USER_ID
     , C.COMPLAINTEE_USER_ID
     , C.REASON
     , C.COMPLAINT_CONTENTS
     , C.COMPLAINT_DATE
     , C.TREATMENT
     , C.TREATMENT_REASON
     , C.COMPLETION_DATE
     , G.ID AS GROUP_ID
     -- 그룹에 대한 내용 추가 가능
FROM CP_GROUP CG JOIN COMPLAINTLISTVIEW C
     ON CG.COMPLAINT_ID = C.ID
     JOIN TBL_GROUP G
     ON CG.GROUP_ID = G.ID;


CREATE OR REPLACE VIEW CP_MOMENTLISTVIEW
AS
SELECT CM.ID
     , C.ID AS COMPLAINT_ID
     , C.COMPLAINTER_USER_ID
     , C.COMPLAINTEE_USER_ID
     , C.REASON
     , C.COMPLAINT_CONTENTS
     , C.COMPLAINT_DATE
     , C.TREATMENT
     , C.TREATMENT_REASON
     , C.COMPLETION_DATE
     , M.ID AS MOMENT_ID
FROM CP_MOMENT CM
     JOIN COMPLAINTLISTVIEW C
     ON CM.COMPLAINT_ID = C.ID
     JOIN MOMENT M
     ON CM.MOMENT_ID=M.ID;

CREATE OR REPLACE VIEW CP_GALLERYVIEW
AS
SELECT CG.ID
     , C.ID AS COMPLAINT_ID
     , C.COMPLAINTER_USER_ID
     , C.COMPLAINTEE_USER_ID
     , C.REASON
     , C.COMPLAINT_CONTENTS
     , C.COMPLAINT_DATE
     , C.TREATMENT
     , C.TREATMENT_REASON
     , C.COMPLETION_DATE
     , G.ID AS GALLERY_ID
FROM CP_GALLERY CG 
     JOIN COMPLAINTLISTVIEW C
     ON CG.COMPLAINT_ID = C.ID
     JOIN GALLERY G
     ON CG.GALLERY_ID=G.ID;



CREATE OR REPLACE VIEW CP_GALLERYCOMMENTVIEW
AS
SELECT CG.ID
     , C.ID AS COMPLAINT_ID
     , C.COMPLAINTER_USER_ID
     , C.COMPLAINTEE_USER_ID
     , C.REASON
     , C.COMPLAINT_CONTENTS
     , C.COMPLAINT_DATE
     , C.TREATMENT
     , C.TREATMENT_REASON
     , C.COMPLETION_DATE
     , G.ID AS COMMENT_ID
FROM CP_GALLERY_COMMENT CG 
     JOIN COMPLAINTLISTVIEW C
     ON CG.COMPLAINT_ID = C.ID
     JOIN GL_COMMENT G
     ON CG.COMMENT_ID=G.ID;





DROP TABLE CP_GALLERY_COMMENT;

DROP TABLE GALLERY;

DROP TABLE FV_GALLERY;

DROP TABLE CP_GALLERY;















